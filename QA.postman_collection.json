{
	"info": {
		"_postman_id": "3facab4b-3771-4a0c-aff4-de63a29bb54d",
		"name": "QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21290112"
	},
	"item": [
		{
			"name": "/",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/get_method",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/get_method?name =Dog&age={{age}}",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name ",
							"value": "Dog"
						},
						{
							"key": "age",
							"value": "{{age}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Don",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "60",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3?name=Ane&age=50&salary=100000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Ane"
						},
						{
							"key": "age",
							"value": "50"
						},
						{
							"key": "salary",
							"value": "100000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_1?name=Lol&age={{age}}&weight=69",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Lol"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "weight",
							"value": "69"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_2?name=Sol&age={{age}}&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Sol"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Rick&age={{age}}&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Rick"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/object_info_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip_port}}/object_info_4?name&age={{age}}&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": null
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Mike",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2?name=Mike&age={{age}}&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Mike"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/first",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Mike",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2?name=Mike&age={{age}}&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Mike"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_f = request.data\r",
							"var resp_f = pm.response.json();\r",
							"\r",
							"let req_age = +req_f.age\r",
							"let resp_age = +resp_f.age\r",
							"\r",
							"let req_name = +req_f.name\r",
							"let resp_name = +resp_f.name\r",
							"\r",
							"let req_salary = +req_f.salary\r",
							"let resp_salary_1_5_years =+resp_f.family.u_salary_1_5_year\r",
							"\r",
							"let children_2_name = resp_f.family.children[1][0]\r",
							"\r",
							"console.log('-----' + resp_salary_1_5_years)\r",
							"console.log(req_f)\r",
							"console.log(\"req_age = \" + req_age)\r",
							"console.log(\"resp_age = \" + resp_age)\r",
							"console.log(\"resp_age = \" + typeof resp_age)\r",
							"console.log(resp_f.family.children)\r",
							"console.log(\"req_name = \" + req_name)\r",
							"console.log(\"resp_name = \" + resp_name)\r",
							"\r",
							"pm.test(\"check_age\", function () {\r",
							"    pm.expect(req_age).to.eql(resp_age);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary_1_5_year\", function () {\r",
							"    pm.expect(req_salary*4).to.eql(resp_salary_1_5_years);\r",
							"});\r",
							"\r",
							"pm.test(\"children_2_name\", function () {\r",
							"    pm.expect(children_2_name).to.eql(\"Kate\");\r",
							"});\r",
							"\r",
							"pm.test(\"name_type\", function () {\r",
							"    pm.expect(resp_f.name).to.be.a(\"String\");\r",
							"});\r",
							"\r",
							"pm.test(\"salary_type\", function () {\r",
							"    pm.expect(resp_f.salary).to.be.a(\"Number\");\r",
							"});\r",
							"\r",
							"pm.test(\"have_family_property\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"family\");\r",
							"});\r",
							"\r",
							"pm.test(\"all_properties\", function () {\r",
							"    pm.expect(resp_f).to.have.all.keys(\"age\", \"family\", \"name\", \"salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"inner_properties\", function () {\r",
							"    pm.expect(resp_f.family).to.have.all.keys(\"children\", \"u_salary_1_5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"check_name\", function () {\r",
							"    pm.expect(req_name).to.eql(resp_name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Coco",
							"type": "text"
						},
						{
							"key": "age",
							"value": "42",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_3",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"let req_f = request.data\r",
							"\r",
							"let req_name = req_f.name\r",
							"let resp_name = jsonData.name\r",
							"let req_age = +req_f.age\r",
							"let resp_age = +jsonData.age\r",
							"let req_salary = +req_f.salary\r",
							"let resp_salary = +jsonData.salary\r",
							"let children_2_name = jsonData.family.children[0][0]\r",
							"let children_1_name = jsonData.family.children[1][0]\r",
							"let dog_name_param = jsonData.family.pets.dog\r",
							"let dog_age_param = jsonData.family.pets.dog\r",
							"let dog_name = jsonData.family.pets.dog.name\r",
							"let dog_age = jsonData.family.pets.dog.age\r",
							"\r",
							"console.log(req_f)\r",
							"console.log(\"req_age = \" + req_age)\r",
							"console.log(\"resp_age = \" + resp_age)\r",
							"console.log(\"resp_age = \" + typeof resp_age)\r",
							"console.log(\"req_name = \" + req_name)\r",
							"console.log(\"resp_name = \" + resp_name)\r",
							"console.log(\"req_salary = \" + req_salary)\r",
							"console.log(\"resp_salary = \" + resp_salary)\r",
							"console.log(\"resp_salary = \" + typeof resp_salary)\r",
							"console.log(jsonData.family.children)\r",
							"console.log(jsonData.family.pets)\r",
							"\r",
							"pm.test(\"check_name\", function () {\r",
							"    pm.expect(req_name).to.eql(resp_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check_age\", function () {\r",
							"    pm.expect(req_age).to.eql(resp_age);\r",
							"});\r",
							"\r",
							"pm.test(\"check_salary\", () => {\r",
							"    pm.expect(req_salary).to.eql(resp_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"children_1_name\", function () {\r",
							"    pm.expect(children_1_name).to.eql('Kate');\r",
							"});\r",
							"\r",
							"pm.test(\"children_2_name\", function () {\r",
							"    pm.expect(children_2_name).to.eql('Alex');\r",
							"});\r",
							"\r",
							"pm.test(\"all_properties\", function () {\r",
							"    pm.expect(jsonData).to.have.all.keys(\"age\", \"family\", \"name\", \"salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"inner_properties\", function () {\r",
							"    pm.expect(jsonData.family).to.have.all.keys(\"children\", \"pets\", \"u_salary_1_5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"check_dog_name_param\", function () {\r",
							"    pm.expect(dog_name_param).to.have.all.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"check_dog_age_param\", function () {\r",
							"    pm.expect(dog_age_param).to.have.all.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"check_dog_name\", function () {\r",
							"    pm.expect(dog_name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"check_dog_age\", function () {\r",
							"    pm.expect(dog_age).to.eql(4);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "name",
							"value": "Oliver",
							"type": "text"
						},
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_3?name=Oliver&age=20&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Oliver"
						},
						{
							"key": "age",
							"value": "20"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//parse Request\r",
							"let req_p = request.data\r",
							"//parse JSON\r",
							"var resp_p = pm.response.json();\r",
							"\r",
							"let req_name = req_p.name\r",
							"let resp_name = resp_p.name\r",
							"let req_age = +req_p.age\r",
							"let resp_age = +resp_p.age\r",
							"let req_salary = +req_p.salary\r",
							"let resp_salary = +resp_p.salary\r",
							"let resp_0_salary = resp_p.salary[0]\r",
							"let resp_1_salary = +resp_p.salary[1]\r",
							"let resp_2_salary = +resp_p.salary[2]\r",
							"let req_0_salary = req_p.salary[0]\r",
							"let req_1_salary = +req_p.salary[1]\r",
							"let req_2_salary = +req_p.salary[2]\r",
							"\r",
							"console.log(resp_p)\r",
							"console.log(\"req_name = \" + req_name)\r",
							"console.log(\"resp_name = \" + resp_name)\r",
							"console.log(\"req_age = \" + req_age)\r",
							"console.log(\"resp_age = \" + resp_age)\r",
							"console.log(\"req_age = \" + typeof req_age)\r",
							"console.log(\"resp_age = \" + typeof resp_age)\r",
							"console.log(\"req_salary = \" + req_salary)\r",
							"console.log(\"resp_salary = \" + resp_salary)\r",
							"console.log(\"resp_0_salary = \" + resp_0_salary)\r",
							"console.log(\"resp_1_salary = \" + resp_1_salary)\r",
							"console.log(\"resp_2_salary = \" + resp_2_salary)\r",
							"console.log(\"req_0_salary = \" + req_0_salary)\r",
							"console.log(\"req_1_salary = \" + req_1_salary)\r",
							"console.log(\"req_2_salary = \" + req_2_salary)\r",
							"\r",
							"\r",
							"pm.test(\"check_name\", function () {\r",
							"    pm.expect(req_name).to.eql(resp_name);\r",
							"});\r",
							"\r",
							"pm.test(\"check_age\", function () {\r",
							"    pm.expect(req_age).to.eql(resp_age);\r",
							"})\r",
							"\r",
							"pm.test(\"salary_0_resp_eql_req\", function () {\r",
							"    pm.expect(req_salary).to.eql(resp_0_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"salary_1_resp_eql_*2\", function () {\r",
							"    pm.expect(req_salary*2).to.eql(resp_1_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"salary_2_resp_eql_*3\", function () {\r",
							"    pm.expect(req_salary*3).to.eql(resp_2_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"have_salary_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"salary\");\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", resp_name)\r",
							"pm.environment.set(\"age\", resp_age)\r",
							"pm.environment.set(\"salary\", resp_salary)\r",
							"\r",
							"for (let i = 0; i < resp_p.salary.length; i++) {\r",
							"    console.log(resp_p.salary[i]);\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Oliver",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/object_info_4?name=Oliver&age={{age}}&salary=1000",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Oliver"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//parse Request\r",
							"let req_p = request.data\r",
							"//parse JSON\r",
							"var resp_p = pm.response.json();\r",
							"\r",
							"let req_salary = +req_p.salary\r",
							"let resp_salary = +resp_p.salary\r",
							"let start_qa_salary = +resp_p.start_qa_salary\r",
							"let qa_salary_after_6_months = +resp_p.qa_salary_after_6_months\r",
							"let qa_salary_after_12_months = +resp_p.qa_salary_after_12_months\r",
							"let qa_salary_after_1_5_year = +resp_p[\"qa_salary_after_1.5_year\"]\r",
							"let qa_salary_after_3_5_years = +resp_p[\"qa_salary_after_3.5_years\"]\r",
							"let u_name = resp_p.person.u_name[1]\r",
							"let u_age = +resp_p.person.u_age\r",
							"let req_age = +req_p.age\r",
							"let u_salary_5_years = +resp_p.person.u_salary_5_years\r",
							"\r",
							"console.log(\"qa_salary_after_1.5_year = \" + [\"qa_salary_after_1.5_year\"])\r",
							"console.log(\"qa_salary_after_3.5_years = \" + [\"qa_salary_after_3.5_years\"])\r",
							"console.log(\"u_name = \" + u_name)\r",
							"console.log(\"start_qa_salary = \" + start_qa_salary)\r",
							"console.log(\"qa_salary_after_6_months = \" + qa_salary_after_6_months)\r",
							"console.log(\"salary = \" + req_salary)\r",
							"console.log(\"qa_salary_after_12_months = \" + qa_salary_after_12_months)\r",
							"console.log(\"u_age = \" + u_age)\r",
							"console.log(\"req_age = \" + req_age)\r",
							"console.log(\"u_salary_5_years = \" + u_salary_5_years)\r",
							"console.log(\"u_age = \" + u_age)\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"have_start_qa_salary_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"have_qa_salary_after_6_months_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"have_qa_salary_after_12_months_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"have_qa_salary_after_1.5_year_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"have_qa_salary_after_3.5_years_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"have_person_property\", function () {\r",
							"    pm.expect(resp_p).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary_eql_salary\", function () {\r",
							"    pm.expect(start_qa_salary).to.be.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(qa_salary_after_6_months).to.be.eql(req_salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(qa_salary_after_12_months).to.be.eql(req_salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(resp_p[\"qa_salary_after_1.5_year\"]).to.be.eql(req_salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(resp_p[\"qa_salary_after_3.5_years\"]).to.be.eql(req_salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"u_name_element[1]\", function () {\r",
							"    pm.expect(u_name).to.be.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_age_check\", function () {\r",
							"    pm.expect(u_age).to.be.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years\", function () {\r",
							"    pm.expect(u_salary_5_years).to.be.eql(req_salary*4.2);\r",
							"})\r",
							"\r",
							"let keys = Object.keys(resp_p.person) \r",
							"let values = Object.values(resp_p.person)\r",
							"\r",
							"for (let i = 0; i < keys.length; i += 1) {\r",
							"    console.log(keys[i],values[i]);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip_port}}/user_info_2",
					"host": [
						"{{ip_port}}"
					],
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}",
							"disabled": true
						},
						{
							"key": "age",
							"value": "{{age}}",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}